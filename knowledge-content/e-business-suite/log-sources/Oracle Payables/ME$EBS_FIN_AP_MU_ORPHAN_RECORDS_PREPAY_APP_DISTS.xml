<?xml version="1.0" encoding="UTF-8"?>
<LoganContent oms_version="2.50.2.0.0" name="content_ocid1.tenancy.oc1..aaaaaaaa5s2vdjjrydixjulorcwozffbpna37w5a35p3jhgpyshlkmio6oiq_1650039506307" content_version="2.50.2.0.0" xmlns="http://www.oracle.com/DataCenter/LogAnalyticsStd">
    <Field oms_version="2.50.2.0.0">
        <DisplayName>sensor</DisplayName>
        <FieldType>1</FieldType>
        <IsSystem>0</IsSystem>
        <IsPrimary>1</IsPrimary>
        <DataType>STRING</DataType>
        <IsMetricKeyEligible>0</IsMetricKeyEligible>
        <IsMetricValueEligible>0</IsMetricValueEligible>
        <FacetEligible>1</FacetEligible>
        <RangeFacetEligible>0</RangeFacetEligible>
        <TableEligible>1</TableEligible>
        <FacetPriority>1</FacetPriority>
        <Summarizable>1</Summarizable>
        <HighCardinality>1</HighCardinality>
        <LargeData>0</LargeData>
        <MultiValued>0</MultiValued>
        <SMAEnabledSetting>0</SMAEnabledSetting>
    </Field>
    
    <Tag>
<Name>#medium_severity_sensor</Name>
<DisplayName>Medium Severity Sensor</DisplayName>
<IsSystem>0</IsSystem>
<ProblemPriority>MEDIUM</ProblemPriority>
</Tag>
    <Source name="EBS Sensor: FIN AP ORPHAN RECORDS IN AP PREPAY APP DISTS - Weekly" oms_version="2.50.2.0.0" configWarningSettings="0">
    <SourceType>database_sql</SourceType>
    <TargetTypes>
        <TargetType>omc_oracle_db_instance</TargetType>
        <TargetType>omc_oracle_pdb</TargetType>
    </TargetTypes>
    <DisplayName>EBS Sensor: FIN AP ORPHAN RECORDS IN AP PREPAY APP DISTS - Weekly</DisplayName>
    <Description><![CDATA[Accounting events have been incorrectly accounted because of orphan records in AP_PREPAY_APP_DISTS]]></Description>
    <IsSystem>0</IsSystem>
    <IsSecureContent>1</IsSecureContent>
    <Patterns>
        <DBPattern dateTimeField="entrytime" dateTimeColumns="entrytime">
        <SQLQuery>
            <![CDATA[select 'ME$EBS_FIN_AP_MU_ORPHAN_RECORDS_PREPAY_APP_DISTS' sensor, to_timestamp(to_char(sysdate, 'YYYY-MM-DD hh24:mi:ss'), 'YYYY-MM-DD hh24:mi:ss') entrytime, 'invoice_id:' || s.invoice_id key_data FROM (SELECT      invoice_id invoice_id  FROM      (          WITH invs AS (              SELECT /*+ materialize */ DISTINCT                  invoice_id              FROM                  APPS.ap_invoice_distributions_all              WHERE                  accounting_date BETWEEN ( trunc(sysdate) - 7 ) AND ( trunc(sysdate) + 3 )          )  SELECT 'PRIMARY_ORPHAN_PREPAY_APP_DISTS' category,            ai.invoice_id,            ai.invoice_num,            ai.org_id,            ai.invoice_date,            ai.invoice_amount,            aid.invoice_line_number,            aid.distribution_line_number,            aid.invoice_distribution_id,            aid.amount invoice_dist_amount,            aid.base_amount invoice_dist_base_amount,            aid.line_type_lookup_code,            aid.prepay_distribution_id,            aid.posted_flag,            apad.prepay_app_dist_id,            apad.prepay_history_id,            apad.amount,            apad.base_amount,            apad.base_amt_at_prepay_xrate,            apad.base_amt_at_prepay_pay_xrate,            apad.base_amt_at_prepay_clr_xrate,            xea.event_type_code,            xea.event_id,            xea.event_status_code,            xeb.event_type_code budgetary_event_type,            xeb.event_id budgetary_event_id,            xeb.event_status_code budgetary_event_status,            ai.set_of_books_id     FROM APPS.ap_prepay_app_dists apad,         APPS.xla_events xea,          APPS.xla_events xeb,          APPS.ap_invoice_distributions_all aid,          APPS.ap_invoices_all ai,          invs     WHERE apad.prepay_app_distribution_id = aid.invoice_distribution_id     AND   aid.invoice_id = ai.invoice_id     AND   apad.accounting_event_id = xea.event_id(+)     AND   apad.bc_event_id = xeb.event_id(+)     AND   xea.application_id(+) = 200     AND   xeb.application_id(+) = 200     AND   NOT EXISTS (             SELECT 1 FROM APPS.ap_prepay_history_all apph             WHERE apph.prepay_history_id = apad.prepay_history_id)     AND   ai.invoice_id = invs.invoice_id                 )                  where  ROWNUM < 11  ORDER BY      invoice_id  ) s]]>
        </SQLQuery>
        <IsInclude>1</IsInclude>
            <InUse>1</InUse>
            <DBQueryFieldList>
                <DBPatternSeqField>entrytime</DBPatternSeqField>
                <DBPatternField>
                    <DBQueryColName>sensor</DBQueryColName>
                    <FieldName>udfs1</FieldName>
                </DBPatternField>
                <DBPatternField>
                    <DBQueryColName>entrytime</DBQueryColName>
                    <FieldName>time</FieldName>
                </DBPatternField>
                <DBPatternField>
                                        <DBQueryColName>key_data</DBQueryColName>
                                        <FieldName>probkey</FieldName>
                                   </DBPatternField>
            </DBQueryFieldList>
            <IsSystem>0</IsSystem>
            <IsEnabled>1</IsEnabled>
            </DBPattern>
    </Patterns>
        <TagConditions>
            <TagCondition operator="CONTAINS_REGEX" field="udfs1" alertRuleVisible="0">
                <ConditionValues>
                    <ConditionValue>%</ConditionValue>
                </ConditionValues>
                <ConditionTags tagField="mtag">
                    <ConditionTag>#medium_severity_sensor</ConditionTag>
                </ConditionTags>
                <IsSystem>0</IsSystem>
                <IsEnabled>1</IsEnabled>
            </TagCondition>
        </TagConditions>
        <IsHidden>0</IsHidden>
        <IsSMAEnabled>0</IsSMAEnabled>
    </Source>
    <FieldNameMaps>
        <FieldNameMap>
            <Name>udfs1</Name>
            <DisplayName>sensor</DisplayName>
        </FieldNameMap>
        
    </FieldNameMaps>
</LoganContent>